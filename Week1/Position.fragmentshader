#version 330

in vec3 retNormal;
in vec2 retTexCoord;
in vec3 retFragPos;
in vec3 retViewDirection;



out vec4 FragColor;

struct Material
{
	float specularStrength;
	sampler2D diffuseTexture;
	sampler2D specularTexture;
};

struct Light
{
	vec3 position;
	//vec3 direction;
	vec3 color;
	vec3 ambientColor;
	vec3 diffuseColor;
	vec3 specularColor;

	float constant;
	float linear;
	float quadratic;

	vec3 direction;
	float coneAngle;
	float falloff;
};

uniform Material material;

uniform Light light;

void main(){

	
	FragColor = texture(material.diffuseTexture, retTexCoord)*vec4(abs(retFragPos.x), abs(retFragPos.y),abs(retFragPos.z), 1.0f);
	
}